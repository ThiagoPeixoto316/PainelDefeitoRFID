

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Oct 04 15:34:29 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D  ;; Function _dispLCD is unused but had its address taken
   712                           global _dispLCD
   713                           _dispLCD equ 0
   714  0000  ;; Function _dispLCD_num is unused but had its address taken
   715                           global _dispLCD_num
   716                           _dispLCD_num equ 0
   717  0000  ;; Function _dispLCD_clr is unused but had its address taken
   718                           global _dispLCD_clr
   719                           _dispLCD_clr equ 0
   720  0000  ;; Function _dispLCD_B0 is unused but had its address taken
   721                           global _dispLCD_B0
   722                           _dispLCD_B0 equ 0
   723  0000  ;; Function _dispLCD_B1 is unused but had its address taken
   724                           global _dispLCD_B1
   725                           _dispLCD_B1 equ 0
   726  0000                     	FNCALL	_main,_dispLCD_init
   727                           	FNCALL	_main,_dispLCDstr
   728                           	FNCALL	_dispLCDstr,_dispLCD_dataReg
   729                           	FNCALL	_dispLCDstr,_dispLCD_lincol
   730                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
   731                           	FNCALL	_dispLCD_init,_delay
   732                           	FNCALL	_dispLCD_init,_dispLCD_instReg
   733                           	FNROOT	_main
   734                           	global	_IHM
   735                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   736                           global __pidataBANK0
   737                           __pidataBANK0:
   738  0672                     	file	"./ihm.h"
   739                           	line	15
   740                           
   741                           ;initializer for _IHM
   742                           	retlw	low((fp__dispLCD_init-fpbase))
   743  0672  3401               	retlw	low((fp__dispLCDstr-fpbase))
   744  0673  3404               	retlw	low(0)
   745  0674  3400               	retlw	low(0)
   746  0675  3400               	retlw	low(0)
   747  0676  3400               	retlw	low(0)
   748  0677  3400               	retlw	low(0)
   749  0678  3400               	global	_LCDbits
   750                           _LCDbits	set	8
   751  0008                     	global	_TRISDbits
   752                           _TRISDbits	set	0x88
   753  0088                     psect	strings,class=STRING,delta=2,noexec
   754                           global __pstrings
   755                           __pstrings:
   756  000F                     stringtab:
   757  000F                     	global    __stringtab
   758                           __stringtab:
   759  000F                     ;	String table - string pointers are 1 byte each
   760                           stringcode:stringdir:
   761  000F                     movlw high(stringdir)
      + 000F                     stringdir:	
   762  000F  3000               movwf pclath
   763  0010  008A               movf fsr,w
   764  0011  0804               incf fsr
   765  0012  0A84               	addwf pc
   766  0013  0782               	global __stringbase
   767                           __stringbase:
   768  0014                     	retlw	0
   769  0014  3400               psect	strings
   770                           	global    __end_of__stringtab
   771                           __end_of__stringtab:
   772  0015                     	
   773                           STR_1:	
   774  0015                     	retlw	73	;'I'
   775  0015  3449               	retlw	110	;'n'
   776  0016  346E               	retlw	105	;'i'
   777  0017  3469               	retlw	99	;'c'
   778  0018  3463               	retlw	105	;'i'
   779  0019  3469               	retlw	97	;'a'
   780  001A  3461               	retlw	110	;'n'
   781  001B  346E               	retlw	100	;'d'
   782  001C  3464               	retlw	111	;'o'
   783  001D  346F               	retlw	0
   784  001E  3400               psect	strings
   785                           ; #config settings
   786                           global __CFG_FOSC$INTRC_NOCLKOUT
   787                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   788  0000                     global __CFG_WDTE$OFF
   789                           __CFG_WDTE$OFF equ 0x0
   790  0000                     global __CFG_PWRTE$OFF
   791                           __CFG_PWRTE$OFF equ 0x0
   792  0000                     global __CFG_MCLRE$OFF
   793                           __CFG_MCLRE$OFF equ 0x0
   794  0000                     global __CFG_CP$OFF
   795                           __CFG_CP$OFF equ 0x0
   796  0000                     global __CFG_CPD$OFF
   797                           __CFG_CPD$OFF equ 0x0
   798  0000                     global __CFG_BOREN$OFF
   799                           __CFG_BOREN$OFF equ 0x0
   800  0000                     global __CFG_IESO$OFF
   801                           __CFG_IESO$OFF equ 0x0
   802  0000                     global __CFG_FCMEN$OFF
   803                           __CFG_FCMEN$OFF equ 0x0
   804  0000                     global __CFG_LVP$OFF
   805                           __CFG_LVP$OFF equ 0x0
   806  0000                     global __CFG_BOR4V$BOR40V
   807                           __CFG_BOR4V$BOR40V equ 0x0
   808  0000                     global __CFG_WRT$OFF
   809                           __CFG_WRT$OFF equ 0x0
   810  0000                     	file	"C:\Users\20185210\AppData\Local\Temp\s7to."
   811                           	line	#
   812                           psect cinit,class=CODE,delta=2
   813                           global start_initialization
   814                           start_initialization:
   815  07EE                     
   816                           global __initialization
   817                           __initialization:
   818  07EE                     psect	dataBANK0,class=BANK0,space=1,noexec
   819                           global __pdataBANK0
   820                           __pdataBANK0:
   821  0020                     	file	"./ihm.h"
   822                           	line	15
   823                           _IHM:
   824  0020                            ds      7
   825  0020                     
   826                           	file	"C:\Users\20185210\AppData\Local\Temp\s7to."
   827                           	line	#
   828                           global btemp
   829                           psect inittext,class=CODE,delta=2
   830                           global init_fetch0,btemp
   831                           ;	Called with low address in FSR and high address in W
   832                           init_fetch0:
   833  068C                     	movf btemp,w
   834  068C  087E               	movwf pclath
   835  068D  008A               	movf btemp+1,w
   836  068E  087F               	movwf pc
   837  068F  0082               global init_ram0
   838                           ;Called with:
   839                           ;	high address of idata address in btemp 
   840                           ;	low address of idata address in btemp+1 
   841                           ;	low address of data in FSR
   842                           ;	high address + 1 of data in btemp-1
   843                           init_ram0:
   844  0690                     	fcall init_fetch0
   845  0690  120A  118A  268C  120A  118A  	movwf indf,f
   846  0695  0080               	incf fsr,f
   847  0696  0A84               	movf fsr,w
   848  0697  0804               	xorwf btemp-1,w
   849  0698  067D               	btfsc status,2
   850  0699  1903               	retlw 0
   851  069A  3400               	incf btemp+1,f
   852  069B  0AFF               	btfsc status,2
   853  069C  1903               	incf btemp,f
   854  069D  0AFE               	goto init_ram0
   855  069E  2E90               ; Initialize objects allocated to BANK0
   856                           psect cinit,class=CODE,delta=2,merge=1
   857                           global init_ram0, __pidataBANK0
   858                           	bcf	status, 7	;select IRP bank0
   859  07EE  1383               	movlw low(__pdataBANK0+7)
   860  07EF  3027               	movwf btemp-1,f
   861  07F0  00FD               	movlw high(__pidataBANK0)
   862  07F1  3006               	movwf btemp,f
   863  07F2  00FE               	movlw low(__pidataBANK0)
   864  07F3  3072               	movwf btemp+1,f
   865  07F4  00FF               	movlw low(__pdataBANK0)
   866  07F5  3020               	movwf fsr,f
   867  07F6  0084               	fcall init_ram0
   868  07F7  120A  118A  2690  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   869                           global end_of_initialization,__end_of__initialization
   870                           
   871                           ;End of C runtime variable initialization code
   872                           
   873                           end_of_initialization:
   874  07FC                     __end_of__initialization:
   875  07FC                     clrf status
   876  07FC  0183               ljmp _main	;jump to C main() function
   877  07FD  120A  118A  2EB6   psect	cstackCOMMON,class=COMMON,space=1,noexec
   878                           global __pcstackCOMMON
   879                           __pcstackCOMMON:
   880  0070                     ?_delay:	; 1 bytes @ 0x0
   881  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
   882  0070                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
   883  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
   884  0070                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
   885  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
   886  0070                     ?_main:	; 1 bytes @ 0x0
   887  0070                     	global	delay@t
   888                           delay@t:	; 2 bytes @ 0x0
   889  0070                     	ds	1
   890  0070                     	global	dispLCD_dataReg@d
   891                           dispLCD_dataReg@d:	; 1 bytes @ 0x1
   892  0071                     	ds	1
   893  0071                     ??_delay:	; 1 bytes @ 0x2
   894  0072                     	global	dispLCD_instReg@i
   895                           dispLCD_instReg@i:	; 1 bytes @ 0x2
   896  0072                     	ds	1
   897  0072                     ?_dispLCD_lincol:	; 1 bytes @ 0x3
   898  0073                     ??_dispLCD_init:	; 1 bytes @ 0x3
   899  0073                     	global	dispLCD_lincol@col
   900                           dispLCD_lincol@col:	; 1 bytes @ 0x3
   901  0073                     	ds	1
   902  0073                     ??_dispLCD_lincol:	; 1 bytes @ 0x4
   903  0074                     	ds	1
   904  0074                     	global	dispLCD_lincol@lin
   905                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
   906  0075                     	ds	1
   907  0075                     ?_dispLCDstr:	; 1 bytes @ 0x6
   908  0076                     	global	dispLCDstr@str
   909                           dispLCDstr@str:	; 1 bytes @ 0x6
   910  0076                     	ds	1
   911  0076                     ??_dispLCDstr:	; 1 bytes @ 0x7
   912  0077                     	ds	1
   913  0077                     ??_main:	; 1 bytes @ 0x8
   914  0078                     	ds	1
   915  0078                     ;!
   916                           ;!Data Sizes:
   917                           ;!    Strings     10
   918                           ;!    Constant    0
   919                           ;!    Data        7
   920                           ;!    BSS         0
   921                           ;!    Persistent  0
   922                           ;!    Stack       0
   923                           ;!
   924                           ;!Auto Spaces:
   925                           ;!    Space          Size  Autos    Used
   926                           ;!    COMMON           14      9       9
   927                           ;!    BANK0            80      0       7
   928                           ;!    BANK1            80      0       0
   929                           ;!    BANK3            96      0       0
   930                           ;!    BANK2            96      0       0
   931                           
   932                           ;!
   933                           ;!Pointer List with Targets:
   934                           ;!
   935                           ;!    S118$2$2	PTR const unsigned char  size(1) Largest target is 0
   936                           ;!
   937                           ;!    S118$1$0	PTR const unsigned char  size(1) Largest target is 10
   938                           ;!		 -> STR_1(CODE[10]), 
   939                           ;!
   940                           ;!    S118$B1	PTR FTN()unsigned char  size(1) Largest target is 1
   941                           ;!		 -> dispLCD_B1(), 
   942                           ;!
   943                           ;!    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
   944                           ;!		 -> dispLCD_B1(), 
   945                           ;!
   946                           ;!    S118$B0	PTR FTN()unsigned char  size(1) Largest target is 1
   947                           ;!		 -> dispLCD_B0(), 
   948                           ;!
   949                           ;!    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
   950                           ;!		 -> dispLCD_B0(), 
   951                           ;!
   952                           ;!    S118$clr	PTR FTN()void  size(1) Largest target is 1
   953                           ;!		 -> dispLCD_clr(), 
   954                           ;!
   955                           ;!    IHM.clr	PTR FTN()void  size(1) Largest target is 1
   956                           ;!		 -> dispLCD_clr(), 
   957                           ;!
   958                           ;!    S118$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(
                                 1) Largest target is 1
   959                           ;!		 -> dispLCD_num(), 
   960                           ;!
   961                           ;!    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1
                                 ) Largest target is 1
   962                           ;!		 -> dispLCD_num(), 
   963                           ;!
   964                           ;!    S118$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void
                                   size(1) Largest target is 1
   965                           ;!		 -> dispLCD(), 
   966                           ;!
   967                           ;!    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(1) Largest target is 1
   968                           ;!		 -> dispLCD(), 
   969                           ;!
   970                           ;!    S118$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
   971                           ;!		 -> dispLCDstr(), 
   972                           ;!
   973                           ;!    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
   974                           ;!		 -> dispLCDstr(), 
   975                           ;!
   976                           ;!    S118$init	PTR FTN()void  size(1) Largest target is 1
   977                           ;!		 -> dispLCD_init(), 
   978                           ;!
   979                           ;!    IHM.init	PTR FTN()void  size(1) Largest target is 1
   980                           ;!		 -> dispLCD_init(), 
   981                           ;!
   982                           ;!    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 10
   983                           ;!		 -> STR_1(CODE[10]), 
   984                           ;!
   985                           
   986                           
   987                           ;!
   988                           ;!Critical Paths under _main in COMMON
   989                           ;!
   990                           ;!    _main->_dispLCDstr
   991                           ;!    _dispLCDstr->_dispLCD_lincol
   992                           ;!    _dispLCD_lincol->_dispLCD_instReg
   993                           ;!    _dispLCD_init->_delay
   994                           ;!    _dispLCD_init->_dispLCD_instReg
   995                           ;!
   996                           ;!Critical Paths under _main in BANK0
   997                           ;!
   998                           ;!    None.
   999                           ;!
  1000                           ;!Critical Paths under _main in BANK1
  1001                           ;!
  1002                           ;!    None.
  1003                           ;!
  1004                           ;!Critical Paths under _main in BANK3
  1005                           ;!
  1006                           ;!    None.
  1007                           ;!
  1008                           ;!Critical Paths under _main in BANK2
  1009                           ;!
  1010                           ;!    None.
  1011                           
  1012 ;;
  1013 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1014 ;;
  1015                           
  1016                           ;!
  1017                           ;!Call Graph Tables:
  1018                           ;!
  1019                           ;! ---------------------------------------------------------------------------------
  1020                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1021                           ;! ---------------------------------------------------------------------------------
  1022                           ;! (0) _main                                                 1     1      0    1115
  1023                           ;!                                              8 COMMON     1     1      0
  1024                           ;!                       _dispLCD_init *
  1025                           ;!                         _dispLCDstr *
  1026                           ;! ---------------------------------------------------------------------------------
  1027                           ;! (1) _dispLCDstr                                           2     1      1     688
  1028                           ;!                                              6 COMMON     2     1      1
  1029                           ;!                    _dispLCD_dataReg
  1030                           ;!                     _dispLCD_lincol
  1031                           ;! ---------------------------------------------------------------------------------
  1032                           ;! (2) _dispLCD_lincol                                       3     2      1     524
  1033                           ;!                                              3 COMMON     3     2      1
  1034                           ;!                    _dispLCD_instReg
  1035                           ;! ---------------------------------------------------------------------------------
  1036                           ;! (2) _dispLCD_dataReg                                      2     2      0      44
  1037                           ;!                                              0 COMMON     2     2      0
  1038                           ;! ---------------------------------------------------------------------------------
  1039                           ;! (1) _dispLCD_init                                         0     0      0     427
  1040                           ;!                              _delay
  1041                           ;!                    _dispLCD_instReg
  1042                           ;! ---------------------------------------------------------------------------------
  1043                           ;! (3) _dispLCD_instReg                                      3     3      0     176
  1044                           ;!                                              0 COMMON     3     3      0
  1045                           ;! ---------------------------------------------------------------------------------
  1046                           ;! (2) _delay                                                3     1      2     251
  1047                           ;!                                              0 COMMON     3     1      2
  1048                           ;! ---------------------------------------------------------------------------------
  1049                           ;! Estimated maximum stack depth 3
  1050                           ;! ---------------------------------------------------------------------------------
  1051                           ;!
  1052                           ;! Call Graph Graphs:
  1053                           ;!
  1054                           ;! _main (ROOT)
  1055                           ;!   _dispLCD_init *
  1056                           ;!     _delay
  1057                           ;!     _dispLCD_instReg
  1058                           ;!   _dispLCDstr *
  1059                           ;!     _dispLCD_dataReg
  1060                           ;!     _dispLCD_lincol
  1061                           ;!       _dispLCD_instReg
  1062                           ;!
  1063                           
  1064                           ;! Address spaces:
  1065                           
  1066                           ;!Name               Size   Autos  Total    Cost      Usage
  1067                           ;!BANK3               60      0       0       9        0.0%
  1068                           ;!BITBANK3            60      0       0       8        0.0%
  1069                           ;!SFR3                 0      0       0       4        0.0%
  1070                           ;!BITSFR3              0      0       0       4        0.0%
  1071                           ;!BANK2               60      0       0      11        0.0%
  1072                           ;!BITBANK2            60      0       0      10        0.0%
  1073                           ;!SFR2                 0      0       0       5        0.0%
  1074                           ;!BITSFR2              0      0       0       5        0.0%
  1075                           ;!BANK1               50      0       0       7        0.0%
  1076                           ;!BITBANK1            50      0       0       6        0.0%
  1077                           ;!SFR1                 0      0       0       2        0.0%
  1078                           ;!BITSFR1              0      0       0       2        0.0%
  1079                           ;!BANK0               50      0       7       5        8.8%
  1080                           ;!BITBANK0            50      0       0       4        0.0%
  1081                           ;!SFR0                 0      0       0       1        0.0%
  1082                           ;!BITSFR0              0      0       0       1        0.0%
  1083                           ;!COMMON               E      9       9       1       64.3%
  1084                           ;!BITCOMMON            E      0       0       0        0.0%
  1085                           ;!CODE                 0      0       0       0        0.0%
  1086                           ;!DATA                 0      0      10      12        0.0%
  1087                           ;!ABS                  0      0      10       3        0.0%
  1088                           ;!NULL                 0      0       0       0        0.0%
  1089                           ;!STACK                0      0       0       2        0.0%
  1090                           ;!EEDATA             100      0       0       0        0.0%
  1091                           
  1092                           	global	_main
  1093                           
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 14 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : B00/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0
  1112 ;;      Temps:          1       0       0       0       0
  1113 ;;      Totals:         1       0       0       0       0
  1114 ;;Total ram usage:        1 bytes
  1115 ;; Hardware stack levels required when called:    3
  1116 ;; This function calls:
  1117 ;;		_dispLCD_init
  1118 ;;		_dispLCDstr
  1119 ;; This function is called by:
  1120 ;;		Startup code after reset
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1124                           	file	"main.c"
  1125                           	line	14
  1126                           global __pmaintext
  1127                           __pmaintext:	;psect for function _main
  1128  06B6                     psect	maintext
  1129                           	file	"main.c"
  1130                           	line	14
  1131                           	global	__size_of_main
  1132                           	__size_of_main	equ	__end_of_main-_main
  1133  0018                     	
  1134                           _main:	
  1135  06B6                     ;incstack = 0
  1136                           	opt	stack 5
  1137                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1138                           	line	16
  1139                           	
  1140                           l985:	
  1141  06B6                     ;main.c: 16:     IHM.init();
  1142                           	bcf	status, 5	;RP0=0, select bank0
  1143  06B6  1283               	bcf	status, 6	;RP1=0, select bank0
  1144  06B7  1303               	movf	(_IHM),w
  1145  06B8  0820               	fcall	fptable
  1146  06B9  120A  118A  2003  120A  118A  	line	17
  1147                           	
  1148                           l987:	
  1149  06BE                     ;main.c: 17:     IHM.print("Iniciando");
  1150                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1151  06BE  3001               	movwf	(??_main+0)+0
  1152  06BF  00F8               	movf	(??_main+0)+0,w
  1153  06C0  0878               	movwf	(dispLCDstr@str)
  1154  06C1  00F6               	bcf	status, 5	;RP0=0, select bank0
  1155  06C2  1283               	bcf	status, 6	;RP1=0, select bank0
  1156  06C3  1303               	movf	(0+low(_IHM|((0x0)<<8)+01h)),w
  1157  06C4  0821               	fcall	fptable
  1158  06C5  120A  118A  2003  120A  118A  	line	18
  1159                           ;main.c: 18:     while(1)
  1160                           	
  1161                           l97:	
  1162  06CA                     	line	19
  1163                           ;main.c: 19:         ;
  1164                           	
  1165                           l98:	
  1166  06CA                     	goto	l97
  1167  06CA  2ECA               	
  1168                           l99:	
  1169  06CB                     	line	21
  1170                           	
  1171                           l100:	
  1172  06CB                     	global	start
  1173                           	ljmp	start
  1174  06CB  120A  118A  2800   	opt stack 0
  1175                           GLOBAL	__end_of_main
  1176                           	__end_of_main:
  1177  06CE                     	signat	_main,89
  1178                           	global	_dispLCDstr
  1179                           
  1180 ;; *************** function _dispLCDstr *****************
  1181 ;; Defined at:
  1182 ;;		line 156 in file "lcd.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  str             1    6[COMMON] PTR const unsigned char 
  1185 ;;		 -> STR_1(10), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         1       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0
  1199 ;;      Temps:          1       0       0       0       0
  1200 ;;      Totals:         2       0       0       0       0
  1201 ;;Total ram usage:        2 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    2
  1204 ;; This function calls:
  1205 ;;		_dispLCD_dataReg
  1206 ;;		_dispLCD_lincol
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1212                           	file	"lcd.c"
  1213                           	line	156
  1214                           global __ptext1
  1215                           __ptext1:	;psect for function _dispLCDstr
  1216  06F9                     psect	text1
  1217                           	file	"lcd.c"
  1218                           	line	156
  1219                           	global	__size_of_dispLCDstr
  1220                           	__size_of_dispLCDstr	equ	__end_of_dispLCDstr-_dispLCDstr
  1221  003B                     	
  1222                           _dispLCDstr:	
  1223  06F9                     ;incstack = 0
  1224                           	opt	stack 5
  1225                           ; Regs used in _dispLCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1226                           	line	158
  1227                           	
  1228                           l923:	
  1229  06F9                     ;lcd.c: 156: void dispLCDstr( const char * str );lcd.c: 157: {;lcd.c: 158:     dispLCD_l
                                 incol( 0, 0 );
  1230                           	clrf	(dispLCD_lincol@col)
  1231  06F9  01F3               	movlw	low(0)
  1232  06FA  3000               	fcall	_dispLCD_lincol
  1233  06FB  120A  118A  2679  120A  118A  	line	160
  1234                           ;lcd.c: 160:     while( *str )
  1235                           	goto	l933
  1236  0700  2F26               	
  1237                           l47:	
  1238  0701                     	line	162
  1239                           	
  1240                           l925:	
  1241  0701                     ;lcd.c: 161:     {;lcd.c: 162:         if( *str == '\n' )
  1242                           	movf	(dispLCDstr@str),w
  1243  0701  0876               	movwf	fsr0
  1244  0702  0084               	fcall	stringdir
  1245  0703  120A  118A  200F  120A  118A  	xorlw	0Ah
  1246  0708  3A0A               	skipz
  1247  0709  1D03               	goto	u331
  1248  070A  2F0C               	goto	u330
  1249  070B  2F0D               u331:
  1250  070C                     	goto	l929
  1251  070C  2F15               u330:
  1252  070D                     	line	164
  1253                           	
  1254                           l927:	
  1255  070D                     ;lcd.c: 163:         {;lcd.c: 164:             dispLCD_lincol(1,0);
  1256                           	clrf	(dispLCD_lincol@col)
  1257  070D  01F3               	movlw	low(01h)
  1258  070E  3001               	fcall	_dispLCD_lincol
  1259  070F  120A  118A  2679  120A  118A  	goto	l929
  1260  0714  2F15               	line	165
  1261                           ;lcd.c: 165:         }
  1262                           	
  1263                           l48:	
  1264  0715                     	line	166
  1265                           	
  1266                           l929:	
  1267  0715                     ;lcd.c: 166:         dispLCD_dataReg( *str );
  1268                           	movf	(dispLCDstr@str),w
  1269  0715  0876               	movwf	fsr0
  1270  0716  0084               	fcall	stringdir
  1271  0717  120A  118A  200F  120A  118A  	fcall	_dispLCD_dataReg
  1272  071C  120A  118A  26CE  120A  118A  	line	167
  1273                           	
  1274                           l931:	
  1275  0721                     ;lcd.c: 167:         ++str;
  1276                           	movlw	low(01h)
  1277  0721  3001               	movwf	(??_dispLCDstr+0)+0
  1278  0722  00F7               	movf	(??_dispLCDstr+0)+0,w
  1279  0723  0877               	addwf	(dispLCDstr@str),f
  1280  0724  07F6               	goto	l933
  1281  0725  2F26               	line	168
  1282                           ;lcd.c: 168:     }
  1283                           	
  1284                           l46:	
  1285  0726                     	line	160
  1286                           	
  1287                           l933:	
  1288  0726                     ;lcd.c: 160:     while( *str )
  1289                           	movf	(dispLCDstr@str),w
  1290  0726  0876               	movwf	fsr0
  1291  0727  0084               	fcall	stringdir
  1292  0728  120A  118A  200F  120A  118A  	xorlw	0
  1293  072D  3A00               	skipz
  1294  072E  1D03               	goto	u341
  1295  072F  2F31               	goto	u340
  1296  0730  2F32               u341:
  1297  0731                     	goto	l925
  1298  0731  2F01               u340:
  1299  0732                     	goto	l50
  1300  0732  2F33               	
  1301                           l49:	
  1302  0733                     	line	169
  1303                           	
  1304                           l50:	
  1305  0733                     	return
  1306  0733  0008               	opt stack 0
  1307                           GLOBAL	__end_of_dispLCDstr
  1308                           	__end_of_dispLCDstr:
  1309  0734                     	signat	_dispLCDstr,4217
  1310                           	global	_dispLCD_lincol
  1311                           
  1312 ;; *************** function _dispLCD_lincol *****************
  1313 ;; Defined at:
  1314 ;;		line 118 in file "lcd.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  lin             1    wreg     unsigned char 
  1317 ;;  col             1    3[COMMON] unsigned char 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  lin             1    5[COMMON] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         1       0       0       0       0
  1330 ;;      Locals:         1       0       0       0       0
  1331 ;;      Temps:          1       0       0       0       0
  1332 ;;      Totals:         3       0       0       0       0
  1333 ;;Total ram usage:        3 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    1
  1336 ;; This function calls:
  1337 ;;		_dispLCD_instReg
  1338 ;; This function is called by:
  1339 ;;		_dispLCDstr
  1340 ;;		_dispLCD
  1341 ;;		_dispLCD_num
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1345                           	line	118
  1346                           global __ptext2
  1347                           __ptext2:	;psect for function _dispLCD_lincol
  1348  0679                     psect	text2
  1349                           	file	"lcd.c"
  1350                           	line	118
  1351                           	global	__size_of_dispLCD_lincol
  1352                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  1353  0013                     	
  1354                           _dispLCD_lincol:	
  1355  0679                     ;incstack = 0
  1356                           	opt	stack 5
  1357                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  1358                           ;dispLCD_lincol@lin stored from wreg
  1359                           	movwf	(dispLCD_lincol@lin)
  1360  0679  00F5               	line	120
  1361                           	
  1362                           l901:	
  1363  067A                     ;lcd.c: 118: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 119: {;lc
                                 d.c: 120:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  1364                           	movf	(dispLCD_lincol@lin),w
  1365  067A  0875               	movwf	(??_dispLCD_lincol+0)+0
  1366  067B  00F4               	movlw	06h
  1367  067C  3006               u325:
  1368  067D                     	clrc
  1369  067D  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  1370  067E  0DF4               	addlw	-1
  1371  067F  3EFF               	skipz
  1372  0680  1D03               	goto	u325
  1373  0681  2E7D               	movf	(dispLCD_lincol@col),w
  1374  0682  0873               	addwf	0+(??_dispLCD_lincol+0)+0,w
  1375  0683  0774               	andlw	07Fh
  1376  0684  397F               	addlw	080h
  1377  0685  3E80               	fcall	_dispLCD_instReg
  1378  0686  120A  118A  2775  120A  118A  	line	121
  1379                           	
  1380                           l34:	
  1381  068B                     	return
  1382  068B  0008               	opt stack 0
  1383                           GLOBAL	__end_of_dispLCD_lincol
  1384                           	__end_of_dispLCD_lincol:
  1385  068C                     	signat	_dispLCD_lincol,8313
  1386                           	global	_dispLCD_dataReg
  1387                           
  1388 ;; *************** function _dispLCD_dataReg *****************
  1389 ;; Defined at:
  1390 ;;		line 102 in file "lcd.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  d               1    wreg     unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  d               1    1[COMMON] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0
  1406 ;;      Temps:          1       0       0       0       0
  1407 ;;      Totals:         2       0       0       0       0
  1408 ;;Total ram usage:        2 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_dispLCDstr
  1414 ;;		_dispLCD
  1415 ;;		_dispLCD_num
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1419                           	line	102
  1420                           global __ptext3
  1421                           __ptext3:	;psect for function _dispLCD_dataReg
  1422  06CE                     psect	text3
  1423                           	file	"lcd.c"
  1424                           	line	102
  1425                           	global	__size_of_dispLCD_dataReg
  1426                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  1427  002B                     	
  1428                           _dispLCD_dataReg:	
  1429  06CE                     ;incstack = 0
  1430                           	opt	stack 6
  1431                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  1432                           ;dispLCD_dataReg@d stored from wreg
  1433                           	movwf	(dispLCD_dataReg@d)
  1434  06CE  00F1               	line	104
  1435                           	
  1436                           l883:	
  1437  06CF                     ;lcd.c: 102: void dispLCD_dataReg( unsigned char d );lcd.c: 103: {;lcd.c: 104:     LCDbi
                                 ts.RS = 1;
  1438                           	bcf	status, 5	;RP0=0, select bank0
  1439  06CF  1283               	bcf	status, 6	;RP1=0, select bank0
  1440  06D0  1303               	bsf	(8),4	;volatile
  1441  06D1  1608               	line	105
  1442                           	
  1443                           l885:	
  1444  06D2                     ;lcd.c: 105:     LCDbits.BUS = d >> 4;
  1445                           	movf	(dispLCD_dataReg@d),w
  1446  06D2  0871               	movwf	(??_dispLCD_dataReg+0)+0
  1447  06D3  00F0               	movlw	04h
  1448  06D4  3004               u315:
  1449  06D5                     	clrc
  1450  06D5  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  1451  06D6  0CF0               	addlw	-1
  1452  06D7  3EFF               	skipz
  1453  06D8  1D03               	goto	u315
  1454  06D9  2ED5               	movf	(8),w	;volatile
  1455  06DA  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  1456  06DB  0670               	andlw	not ((1<<4)-1)
  1457  06DC  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  1458  06DD  0670               	movwf	(8)	;volatile
  1459  06DE  0088               	line	106
  1460                           	
  1461                           l887:	
  1462  06DF                     ;lcd.c: 106:     LCDbits.EN = 0;
  1463                           	bcf	(8),5	;volatile
  1464  06DF  1288               	line	107
  1465                           	
  1466                           l889:	
  1467  06E0                     ;lcd.c: 107:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1468                           	opt asmopt_push
  1469                           opt asmopt_off
  1470                           	movlw	13
  1471  06E0  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  1472  06E1  00F0               	u457:
  1473  06E2                     decfsz	(??_dispLCD_dataReg+0)+0,f
  1474  06E2  0BF0               	goto	u457
  1475  06E3  2EE2               opt asmopt_pop
  1476                           
  1477                           	line	108
  1478                           	
  1479                           l891:	
  1480  06E4                     ;lcd.c: 108:     LCDbits.EN = 1;
  1481                           	bcf	status, 5	;RP0=0, select bank0
  1482  06E4  1283               	bcf	status, 6	;RP1=0, select bank0
  1483  06E5  1303               	bsf	(8),5	;volatile
  1484  06E6  1688               	line	110
  1485                           	
  1486                           l893:	
  1487  06E7                     ;lcd.c: 110:     LCDbits.RS = 1;
  1488                           	bsf	(8),4	;volatile
  1489  06E7  1608               	line	111
  1490                           	
  1491                           l895:	
  1492  06E8                     ;lcd.c: 111:     LCDbits.BUS = d & 0x0F;
  1493                           	movlw	low(0Fh)
  1494  06E8  300F               	andwf	(dispLCD_dataReg@d),w
  1495  06E9  0571               	movwf	(??_dispLCD_dataReg+0)+0
  1496  06EA  00F0               	movf	(8),w	;volatile
  1497  06EB  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  1498  06EC  0670               	andlw	not ((1<<4)-1)
  1499  06ED  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  1500  06EE  0670               	movwf	(8)	;volatile
  1501  06EF  0088               	line	112
  1502                           	
  1503                           l897:	
  1504  06F0                     ;lcd.c: 112:     LCDbits.EN = 0;
  1505                           	bcf	(8),5	;volatile
  1506  06F0  1288               	line	113
  1507                           ;lcd.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1508                           	opt asmopt_push
  1509                           opt asmopt_off
  1510                           	movlw	13
  1511  06F1  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  1512  06F2  00F0               	u467:
  1513  06F3                     decfsz	(??_dispLCD_dataReg+0)+0,f
  1514  06F3  0BF0               	goto	u467
  1515  06F4  2EF3               opt asmopt_pop
  1516                           
  1517                           	line	114
  1518                           	
  1519                           l899:	
  1520  06F5                     ;lcd.c: 114:     LCDbits.EN = 1;
  1521                           	bcf	status, 5	;RP0=0, select bank0
  1522  06F5  1283               	bcf	status, 6	;RP1=0, select bank0
  1523  06F6  1303               	bsf	(8),5	;volatile
  1524  06F7  1688               	line	115
  1525                           	
  1526                           l31:	
  1527  06F8                     	return
  1528  06F8  0008               	opt stack 0
  1529                           GLOBAL	__end_of_dispLCD_dataReg
  1530                           	__end_of_dispLCD_dataReg:
  1531  06F9                     	signat	_dispLCD_dataReg,4217
  1532                           	global	_dispLCD_init
  1533                           
  1534 ;; *************** function _dispLCD_init *****************
  1535 ;; Defined at:
  1536 ;;		line 124 in file "lcd.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    1
  1557 ;; This function calls:
  1558 ;;		_delay
  1559 ;;		_dispLCD_instReg
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1565                           	line	124
  1566                           global __ptext4
  1567                           __ptext4:	;psect for function _dispLCD_init
  1568  0734                     psect	text4
  1569                           	file	"lcd.c"
  1570                           	line	124
  1571                           	global	__size_of_dispLCD_init
  1572                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  1573  0041                     	
  1574                           _dispLCD_init:	
  1575  0734                     ;incstack = 0
  1576                           	opt	stack 6
  1577                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  1578                           	line	126
  1579                           	
  1580                           l903:	
  1581  0734                     ;lcd.c: 126:     delay(100);
  1582                           	movlw	064h
  1583  0734  3064               	movwf	(delay@t)
  1584  0735  00F0               	movlw	0
  1585  0736  3000               	movwf	((delay@t))+1
  1586  0737  00F1               	fcall	_delay
  1587  0738  120A  118A  269F  120A  118A  	line	127
  1588                           	
  1589                           l905:	
  1590  073D                     ;lcd.c: 127:     TRISDbits.TRISD0 = 0;
  1591                           	bsf	status, 5	;RP0=1, select bank1
  1592  073D  1683               	bcf	status, 6	;RP1=0, select bank1
  1593  073E  1303               	bcf	(136)^080h,0	;volatile
  1594  073F  1008               	line	128
  1595                           	
  1596                           l907:	
  1597  0740                     ;lcd.c: 128:     TRISDbits.TRISD1 = 0;
  1598                           	bcf	(136)^080h,1	;volatile
  1599  0740  1088               	line	129
  1600                           	
  1601                           l909:	
  1602  0741                     ;lcd.c: 129:     TRISDbits.TRISD2 = 0;
  1603                           	bcf	(136)^080h,2	;volatile
  1604  0741  1108               	line	130
  1605                           	
  1606                           l911:	
  1607  0742                     ;lcd.c: 130:     TRISDbits.TRISD3 = 0;
  1608                           	bcf	(136)^080h,3	;volatile
  1609  0742  1188               	line	131
  1610                           	
  1611                           l913:	
  1612  0743                     ;lcd.c: 131:     TRISDbits.TRISD4 = 0;
  1613                           	bcf	(136)^080h,4	;volatile
  1614  0743  1208               	line	132
  1615                           	
  1616                           l915:	
  1617  0744                     ;lcd.c: 132:     TRISDbits.TRISD5 = 0;
  1618                           	bcf	(136)^080h,5	;volatile
  1619  0744  1288               	line	133
  1620                           	
  1621                           l917:	
  1622  0745                     ;lcd.c: 133:     TRISDbits.TRISD6 = 1;
  1623                           	bsf	(136)^080h,6	;volatile
  1624  0745  1708               	line	134
  1625                           	
  1626                           l919:	
  1627  0746                     ;lcd.c: 134:     TRISDbits.TRISD7 = 1;
  1628                           	bsf	(136)^080h,7	;volatile
  1629  0746  1788               	line	135
  1630                           ;lcd.c: 135:     delay(100);
  1631                           	movlw	064h
  1632  0747  3064               	movwf	(delay@t)
  1633  0748  00F0               	movlw	0
  1634  0749  3000               	movwf	((delay@t))+1
  1635  074A  00F1               	fcall	_delay
  1636  074B  120A  118A  269F  120A  118A  	line	136
  1637                           	
  1638                           l921:	
  1639  0750                     ;lcd.c: 136:     LCDbits.EN = 1;
  1640                           	bcf	status, 5	;RP0=0, select bank0
  1641  0750  1283               	bcf	status, 6	;RP1=0, select bank0
  1642  0751  1303               	bsf	(8),5	;volatile
  1643  0752  1688               	line	137
  1644                           ;lcd.c: 137:     dispLCD_instReg( 0x20|0x00|0x08);
  1645                           	movlw	low(028h)
  1646  0753  3028               	fcall	_dispLCD_instReg
  1647  0754  120A  118A  2775  120A  118A  	line	138
  1648                           ;lcd.c: 138:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  1649                           	movlw	low(0Ch)
  1650  0759  300C               	fcall	_dispLCD_instReg
  1651  075A  120A  118A  2775  120A  118A  	line	139
  1652                           ;lcd.c: 139:     dispLCD_instReg( 0x01 );
  1653                           	movlw	low(01h)
  1654  075F  3001               	fcall	_dispLCD_instReg
  1655  0760  120A  118A  2775  120A  118A  	line	140
  1656                           ;lcd.c: 140:     dispLCD_instReg( 0x02 );
  1657                           	movlw	low(02h)
  1658  0765  3002               	fcall	_dispLCD_instReg
  1659  0766  120A  118A  2775  120A  118A  	line	141
  1660                           ;lcd.c: 141:     delay(100);
  1661                           	movlw	064h
  1662  076B  3064               	movwf	(delay@t)
  1663  076C  00F0               	movlw	0
  1664  076D  3000               	movwf	((delay@t))+1
  1665  076E  00F1               	fcall	_delay
  1666  076F  120A  118A  269F  120A  118A  	line	142
  1667                           	
  1668                           l37:	
  1669  0774                     	return
  1670  0774  0008               	opt stack 0
  1671                           GLOBAL	__end_of_dispLCD_init
  1672                           	__end_of_dispLCD_init:
  1673  0775                     	signat	_dispLCD_init,89
  1674                           	global	_dispLCD_instReg
  1675                           
  1676 ;; *************** function _dispLCD_instReg *****************
  1677 ;; Defined at:
  1678 ;;		line 69 in file "lcd.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  i               1    wreg     unsigned char 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  i               1    2[COMMON] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0
  1694 ;;      Temps:          2       0       0       0       0
  1695 ;;      Totals:         3       0       0       0       0
  1696 ;;Total ram usage:        3 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_dispLCD_lincol
  1702 ;;		_dispLCD_init
  1703 ;;		_dispLCD_clr
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1707                           	line	69
  1708                           global __ptext5
  1709                           __ptext5:	;psect for function _dispLCD_instReg
  1710  0775                     psect	text5
  1711                           	file	"lcd.c"
  1712                           	line	69
  1713                           	global	__size_of_dispLCD_instReg
  1714                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  1715  0079                     	
  1716                           _dispLCD_instReg:	
  1717  0775                     ;incstack = 0
  1718                           	opt	stack 5
  1719                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  1720                           ;dispLCD_instReg@i stored from wreg
  1721                           	movwf	(dispLCD_instReg@i)
  1722  0775  00F2               	line	71
  1723                           	
  1724                           l835:	
  1725  0776                     ;lcd.c: 69: void dispLCD_instReg( unsigned char i );lcd.c: 70: {;lcd.c: 71:     LCDbits.
                                 RS = 0;
  1726                           	bcf	status, 5	;RP0=0, select bank0
  1727  0776  1283               	bcf	status, 6	;RP1=0, select bank0
  1728  0777  1303               	bcf	(8),4	;volatile
  1729  0778  1208               	line	72
  1730                           	
  1731                           l837:	
  1732  0779                     ;lcd.c: 72:     LCDbits.BUS = (i>>4);
  1733                           	movf	(dispLCD_instReg@i),w
  1734  0779  0872               	movwf	(??_dispLCD_instReg+0)+0
  1735  077A  00F0               	movlw	04h
  1736  077B  3004               u235:
  1737  077C                     	clrc
  1738  077C  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  1739  077D  0CF0               	addlw	-1
  1740  077E  3EFF               	skipz
  1741  077F  1D03               	goto	u235
  1742  0780  2F7C               	movf	(8),w	;volatile
  1743  0781  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  1744  0782  0670               	andlw	not ((1<<4)-1)
  1745  0783  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  1746  0784  0670               	movwf	(8)	;volatile
  1747  0785  0088               	line	74
  1748                           	
  1749                           l839:	
  1750  0786                     ;lcd.c: 74:     LCDbits.EN = 0;
  1751                           	bcf	(8),5	;volatile
  1752  0786  1288               	line	75
  1753                           ;lcd.c: 75:     if( i == 0x01 || i == 0x02 )
  1754                           		decf	((dispLCD_instReg@i)),w
  1755  0787  0372               	btfsc	status,2
  1756  0788  1903               	goto	u241
  1757  0789  2F8B               	goto	u240
  1758  078A  2F8C               u241:
  1759  078B                     	goto	l843
  1760  078B  2F93               u240:
  1761  078C                     	
  1762                           l841:	
  1763  078C                     		movlw	2
  1764  078C  3002               	xorwf	((dispLCD_instReg@i)),w
  1765  078D  0672               	btfss	status,2
  1766  078E  1D03               	goto	u251
  1767  078F  2F91               	goto	u250
  1768  0790  2F92               u251:
  1769  0791                     	goto	l845
  1770  0791  2F9D               u250:
  1771  0792                     	goto	l843
  1772  0792  2F93               	
  1773                           l21:	
  1774  0793                     	line	76
  1775                           	
  1776                           l843:	
  1777  0793                     ;lcd.c: 76:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1778                           	opt asmopt_push
  1779                           opt asmopt_off
  1780                           movlw	3
  1781  0793  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  1782  0794  00F1               	movlw	151
  1783  0795  3097               movwf	((??_dispLCD_instReg+0)+0),f
  1784  0796  00F0               	u477:
  1785  0797                     decfsz	((??_dispLCD_instReg+0)+0),f
  1786  0797  0BF0               	goto	u477
  1787  0798  2F97               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  1788  0799  0BF1               	goto	u477
  1789  079A  2F97               	nop2
  1790  079B  2F9C               opt asmopt_pop
  1791                           
  1792                           	goto	l847
  1793  079C  2FA2               	line	77
  1794                           ;lcd.c: 77:     else
  1795                           	
  1796                           l19:	
  1797  079D                     	line	78
  1798                           	
  1799                           l845:	
  1800  079D                     ;lcd.c: 78:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1801                           	opt asmopt_push
  1802                           opt asmopt_off
  1803                           	movlw	13
  1804  079D  300D               movwf	((??_dispLCD_instReg+0)+0),f
  1805  079E  00F0               	u487:
  1806  079F                     decfsz	(??_dispLCD_instReg+0)+0,f
  1807  079F  0BF0               	goto	u487
  1808  07A0  2F9F               opt asmopt_pop
  1809                           
  1810                           	goto	l847
  1811  07A1  2FA2               	
  1812                           l22:	
  1813  07A2                     	line	79
  1814                           	
  1815                           l847:	
  1816  07A2                     ;lcd.c: 79:     LCDbits.EN = 1;
  1817                           	bcf	status, 5	;RP0=0, select bank0
  1818  07A2  1283               	bcf	status, 6	;RP1=0, select bank0
  1819  07A3  1303               	bsf	(8),5	;volatile
  1820  07A4  1688               	line	82
  1821                           	
  1822                           l849:	
  1823  07A5                     ;lcd.c: 82:     if( (i & 0xF0) == (0x20 | 0x00) )
  1824                           	movlw	low(0F0h)
  1825  07A5  30F0               	andwf	(dispLCD_instReg@i),w
  1826  07A6  0572               	movwf	(??_dispLCD_instReg+0)+0
  1827  07A7  00F0               		movlw	32
  1828  07A8  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  1829  07A9  0670               	btfss	status,2
  1830  07AA  1D03               	goto	u261
  1831  07AB  2FAD               	goto	u260
  1832  07AC  2FAE               u261:
  1833  07AD                     	goto	l861
  1834  07AD  2FC5               u260:
  1835  07AE                     	line	84
  1836                           	
  1837                           l851:	
  1838  07AE                     ;lcd.c: 83:     {;lcd.c: 84:         LCDbits.RS = 0;
  1839                           	bcf	(8),4	;volatile
  1840  07AE  1208               	line	85
  1841                           	
  1842                           l853:	
  1843  07AF                     ;lcd.c: 85:         LCDbits.BUS = i>>4;
  1844                           	movf	(dispLCD_instReg@i),w
  1845  07AF  0872               	movwf	(??_dispLCD_instReg+0)+0
  1846  07B0  00F0               	movlw	04h
  1847  07B1  3004               u275:
  1848  07B2                     	clrc
  1849  07B2  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  1850  07B3  0CF0               	addlw	-1
  1851  07B4  3EFF               	skipz
  1852  07B5  1D03               	goto	u275
  1853  07B6  2FB2               	movf	(8),w	;volatile
  1854  07B7  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  1855  07B8  0670               	andlw	not ((1<<4)-1)
  1856  07B9  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  1857  07BA  0670               	movwf	(8)	;volatile
  1858  07BB  0088               	line	86
  1859                           	
  1860                           l855:	
  1861  07BC                     ;lcd.c: 86:         LCDbits.EN = 0;
  1862                           	bcf	(8),5	;volatile
  1863  07BC  1288               	line	87
  1864                           	
  1865                           l857:	
  1866  07BD                     ;lcd.c: 87:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1867                           	opt asmopt_push
  1868                           opt asmopt_off
  1869                           	movlw	13
  1870  07BD  300D               movwf	((??_dispLCD_instReg+0)+0),f
  1871  07BE  00F0               	u497:
  1872  07BF                     decfsz	(??_dispLCD_instReg+0)+0,f
  1873  07BF  0BF0               	goto	u497
  1874  07C0  2FBF               opt asmopt_pop
  1875                           
  1876                           	line	88
  1877                           	
  1878                           l859:	
  1879  07C1                     ;lcd.c: 88:         LCDbits.EN = 1;
  1880                           	bcf	status, 5	;RP0=0, select bank0
  1881  07C1  1283               	bcf	status, 6	;RP1=0, select bank0
  1882  07C2  1303               	bsf	(8),5	;volatile
  1883  07C3  1688               	goto	l861
  1884  07C4  2FC5               	line	89
  1885                           ;lcd.c: 89:     }
  1886                           	
  1887                           l23:	
  1888  07C5                     	line	91
  1889                           	
  1890                           l861:	
  1891  07C5                     ;lcd.c: 91:     LCDbits.RS = 0;
  1892                           	bcf	(8),4	;volatile
  1893  07C5  1208               	line	92
  1894                           	
  1895                           l863:	
  1896  07C6                     ;lcd.c: 92:     LCDbits.BUS = i & 0x0F;
  1897                           	movlw	low(0Fh)
  1898  07C6  300F               	andwf	(dispLCD_instReg@i),w
  1899  07C7  0572               	movwf	(??_dispLCD_instReg+0)+0
  1900  07C8  00F0               	movf	(8),w	;volatile
  1901  07C9  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  1902  07CA  0670               	andlw	not ((1<<4)-1)
  1903  07CB  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  1904  07CC  0670               	movwf	(8)	;volatile
  1905  07CD  0088               	line	93
  1906                           	
  1907                           l865:	
  1908  07CE                     ;lcd.c: 93:     LCDbits.EN = 0;
  1909                           	bcf	(8),5	;volatile
  1910  07CE  1288               	line	94
  1911                           	
  1912                           l867:	
  1913  07CF                     ;lcd.c: 94:     if( i == 0x01 || i == 0x02 )
  1914                           		decf	((dispLCD_instReg@i)),w
  1915  07CF  0372               	btfsc	status,2
  1916  07D0  1903               	goto	u281
  1917  07D1  2FD3               	goto	u280
  1918  07D2  2FD4               u281:
  1919  07D3                     	goto	l871
  1920  07D3  2FDB               u280:
  1921  07D4                     	
  1922                           l869:	
  1923  07D4                     		movlw	2
  1924  07D4  3002               	xorwf	((dispLCD_instReg@i)),w
  1925  07D5  0672               	btfss	status,2
  1926  07D6  1D03               	goto	u291
  1927  07D7  2FD9               	goto	u290
  1928  07D8  2FDA               u291:
  1929  07D9                     	goto	l873
  1930  07D9  2FE5               u290:
  1931  07DA                     	goto	l871
  1932  07DA  2FDB               	
  1933                           l26:	
  1934  07DB                     	line	95
  1935                           	
  1936                           l871:	
  1937  07DB                     ;lcd.c: 95:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1938                           	opt asmopt_push
  1939                           opt asmopt_off
  1940                           movlw	3
  1941  07DB  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  1942  07DC  00F1               	movlw	151
  1943  07DD  3097               movwf	((??_dispLCD_instReg+0)+0),f
  1944  07DE  00F0               	u507:
  1945  07DF                     decfsz	((??_dispLCD_instReg+0)+0),f
  1946  07DF  0BF0               	goto	u507
  1947  07E0  2FDF               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  1948  07E1  0BF1               	goto	u507
  1949  07E2  2FDF               	nop2
  1950  07E3  2FE4               opt asmopt_pop
  1951                           
  1952                           	goto	l875
  1953  07E4  2FEA               	line	96
  1954                           ;lcd.c: 96:     else
  1955                           	
  1956                           l24:	
  1957  07E5                     	line	97
  1958                           	
  1959                           l873:	
  1960  07E5                     ;lcd.c: 97:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1961                           	opt asmopt_push
  1962                           opt asmopt_off
  1963                           	movlw	13
  1964  07E5  300D               movwf	((??_dispLCD_instReg+0)+0),f
  1965  07E6  00F0               	u517:
  1966  07E7                     decfsz	(??_dispLCD_instReg+0)+0,f
  1967  07E7  0BF0               	goto	u517
  1968  07E8  2FE7               opt asmopt_pop
  1969                           
  1970                           	goto	l875
  1971  07E9  2FEA               	
  1972                           l27:	
  1973  07EA                     	line	98
  1974                           	
  1975                           l875:	
  1976  07EA                     ;lcd.c: 98:     LCDbits.EN = 1;
  1977                           	bcf	status, 5	;RP0=0, select bank0
  1978  07EA  1283               	bcf	status, 6	;RP1=0, select bank0
  1979  07EB  1303               	bsf	(8),5	;volatile
  1980  07EC  1688               	line	99
  1981                           	
  1982                           l28:	
  1983  07ED                     	return
  1984  07ED  0008               	opt stack 0
  1985                           GLOBAL	__end_of_dispLCD_instReg
  1986                           	__end_of_dispLCD_instReg:
  1987  07EE                     	signat	_dispLCD_instReg,4217
  1988                           	global	_delay
  1989                           
  1990 ;; *************** function _delay *****************
  1991 ;; Defined at:
  1992 ;;		line 12 in file "delay.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  t               2    0[COMMON] unsigned int 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         2       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0
  2008 ;;      Temps:          1       0       0       0       0
  2009 ;;      Totals:         3       0       0       0       0
  2010 ;;Total ram usage:        3 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_dispLCD_init
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2019                           	file	"delay.c"
  2020                           	line	12
  2021                           global __ptext6
  2022                           __ptext6:	;psect for function _delay
  2023  069F                     psect	text6
  2024                           	file	"delay.c"
  2025                           	line	12
  2026                           	global	__size_of_delay
  2027                           	__size_of_delay	equ	__end_of_delay-_delay
  2028  0017                     	
  2029                           _delay:	
  2030  069F                     ;incstack = 0
  2031                           	opt	stack 6
  2032                           ; Regs used in _delay: [wreg+status,2+status,0]
  2033                           	line	14
  2034                           	
  2035                           l877:	
  2036  069F                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  2037                           	goto	l881
  2038  069F  2EAE               	
  2039                           l6:	
  2040  06A0                     	line	16
  2041                           	
  2042                           l879:	
  2043  06A0                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  2044                           	opt asmopt_push
  2045                           opt asmopt_off
  2046                           	movlw	199
  2047  06A0  30C7               movwf	((??_delay+0)+0),f
  2048  06A1  00F2               	u527:
  2049  06A2                     	nop2
  2050  06A2  2EA3               decfsz	(??_delay+0)+0,f
  2051  06A3  0BF2               	goto	u527
  2052  06A4  2EA2               	nop2
  2053  06A5  2EA6               	nop2
  2054  06A6  2EA7               opt asmopt_pop
  2055                           
  2056                           	line	17
  2057                           ;delay.c: 17:         --t;
  2058                           	movlw	01h
  2059  06A7  3001               	subwf	(delay@t),f
  2060  06A8  02F0               	movlw	0
  2061  06A9  3000               	skipc
  2062  06AA  1C03               	decf	(delay@t+1),f
  2063  06AB  03F1               	subwf	(delay@t+1),f
  2064  06AC  02F1               	goto	l881
  2065  06AD  2EAE               	line	18
  2066                           ;delay.c: 18:     }
  2067                           	
  2068                           l5:	
  2069  06AE                     	line	14
  2070                           	
  2071                           l881:	
  2072  06AE                     ;delay.c: 14:     while( t )
  2073                           	movf	((delay@t)),w
  2074  06AE  0870               iorwf	((delay@t+1)),w
  2075  06AF  0471               	btfss	status,2
  2076  06B0  1D03               	goto	u301
  2077  06B1  2EB3               	goto	u300
  2078  06B2  2EB4               u301:
  2079  06B3                     	goto	l879
  2080  06B3  2EA0               u300:
  2081  06B4                     	goto	l8
  2082  06B4  2EB5               	
  2083                           l7:	
  2084  06B5                     	line	19
  2085                           	
  2086                           l8:	
  2087  06B5                     	return
  2088  06B5  0008               	opt stack 0
  2089                           GLOBAL	__end_of_delay
  2090                           	__end_of_delay:
  2091  06B6                     	signat	_delay,4217
  2092                           global	___latbits
  2093                           ___latbits	equ	2
  2094  0002                     	global	fptotal
  2095                           fptotal equ 4
  2096  0004                     	file ""
  2097                           	line	#
  2098                           psect	functab,class=ENTRY,delta=2
  2099                           global __pfunctab
  2100                           __pfunctab:
  2101  0003                     	global	fptable,__fptable
  2102                           __fptable:
  2103  0003                     fptable:
  2104  0003                     	movwf (btemp+1)&07Fh
  2105  0003  00FF               	movlw high(fptable)
  2106  0004  3000               	movwf pclath
  2107  0005  008A               	movf (btemp+1)&07Fh,w
  2108  0006  087F               	addwf pc
  2109  0007  0782               	global	fpbase
  2110                           fpbase:
  2111  0008                     	goto fpbase	; Call via a null pointer and you will get stuck here.
  2112  0008  2808               	file ""
  2113                           	line	#
  2114                           fp__dispLCD_init:
  2115  0009                     	ljmp	_dispLCD_init
  2116  0009  120A  118A  2F34   	file ""
  2117                           	line	#
  2118                           fp__dispLCDstr:
  2119  000C                     	ljmp	_dispLCDstr
  2120  000C  120A  118A  2EF9   	global __end_of__fptable
  2121                           	__end_of__fptable:
  2122  000F                     	global __size_of__fptable
  2123                           	__size_of__fptable	equ	__end_of__fptable-__fptable
  2124  000C                     	global	btemp
  2125                           	btemp set 07Eh
  2126  007E                     
  2127                           	DABS	1,126,2	;btemp
  2128                           	global	wtemp0
  2129                           	wtemp0 set btemp+0
  2130  007E                     	end


Data Sizes:
    Strings     10
    Constant    0
    Data        7
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S118$2$2	PTR const unsigned char  size(1) Largest target is 0

    S118$1$0	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    S118$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S118$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S118$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S118$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S118$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S118$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S118$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_dispLCDstr
    _dispLCDstr->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1115
                                              8 COMMON     1     1      0
                       _dispLCD_init *
                         _dispLCDstr *
 ---------------------------------------------------------------------------------
 (1) _dispLCDstr                                           2     1      1     688
                                              6 COMMON     2     1      1
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     524
                                              3 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     427
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCDstr *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       7       5        8.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Oct 04 15:34:29 2021

                       l5 06AE                         l6 06A0                         l7 06B5  
                       l8 06B5                         pc 0002               __CFG_CP$OFF 0000  
                      l21 0793                        l22 07A2                        l23 07C5  
                      l31 06F8                        l24 07E5                        l26 07DB  
                      l34 068B                        l50 0733                        l27 07EA  
                      l19 079D                        l28 07ED                        l37 0774  
                      l46 0726                        l47 0701                        l48 0715  
                      l49 0733                        l97 06CA                        l98 06CA  
                      l99 06CB   __end_of_dispLCD_dataReg 06F9                        fsr 0004  
                     l100 06CB                       l901 067A                       l911 0742  
                     l903 0734                       l841 078C                       l921 0750  
                     l913 0743                       l905 073D                       l851 07AE  
                     l843 0793                       l835 0776                       l915 0744  
                     l907 0740                       l931 0721                       l923 06F9  
                     l853 07AF                       l861 07C5                       l845 079D  
                     l837 0779                       l917 0745                       l909 0741  
                     l925 0701                       l933 0726                       l871 07DB  
                     l863 07C6                       l855 07BC                       l847 07A2  
                     l839 0786                       l919 0746                       l927 070D  
                     l881 06AE                       l873 07E5                       l865 07CE  
                     l857 07BD                       l849 07A5                       l929 0715  
                     l875 07EA                       l867 07CF                       l859 07C1  
                     l891 06E4                       l883 06CF                       l877 069F  
                     l869 07D4                       l893 06E7                       l885 06D2  
                     l879 06A0                       l895 06E8                       l887 06DF  
                     l897 06F0                       l889 06E0                       l985 06B6  
                     l899 06F5                       l987 06BE                       _IHM 0020  
                     u300 06B4                       u301 06B3                       u240 078C  
                     u241 078B                       u250 0792                       u330 070D  
                     u251 0791                       u235 077C                       u315 06D5  
                     u331 070C                       u260 07AE                       u340 0732  
                     u261 07AD                       u325 067D                       u341 0731  
                     u280 07D4                       u281 07D3                       u290 07DA  
            __CFG_CPD$OFF 0000                       u507 07DF                       u291 07D9  
                     u275 07B2                       u517 07E7                       u527 06A2  
                     u457 06E2                       u467 06F3                       u477 0797  
                     u487 079F                       u497 07BF                       fsr0 0004  
                     indf 0000   __end_of_dispLCD_instReg 07EE              __CFG_LVP$OFF 0000  
                    STR_1 0015              __CFG_WRT$OFF 0000                      _main 06B6  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000            __CFG_FCMEN$OFF 0000  
                   _delay 069F                     fpbase 0008            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
    __end_of_dispLCD_init 0775            __CFG_MCLRE$OFF 0000           __initialization 07EE  
            __end_of_main 06CE          ?_dispLCD_dataReg 0070                    ??_main 0078  
        ?_dispLCD_instReg 0070                    ?_delay 0070          __end_of__fptable 000F  
          __CFG_PWRTE$OFF 0000                    delay@t 0070                    fptable 0003  
                  fptotal 0004   __end_of__initialization 07FC   __size_of_dispLCD_lincol 0013  
          __pcstackCOMMON 0070              __pidataBANK0 0672             __end_of_delay 06B6  
                 ??_delay 0072     __size_of_dispLCD_init 0041                __pmaintext 06B6  
              _dispLCD_B0 0000                _dispLCD_B1 0000                _dispLCDstr 06F9  
                 _LCDbits 0008              _dispLCD_init 0734                __stringtab 000F  
                 _dispLCD 0000                   __ptext1 06F9                   __ptext2 0679  
                 __ptext3 06CE                   __ptext4 0734                   __ptext5 0775  
                 __ptext6 069F      end_of_initialization 07FC            _dispLCD_lincol 0679  
             ?_dispLCDstr 0076                 _TRISDbits 0088  __size_of_dispLCD_dataReg 002B  
  __end_of_dispLCD_lincol 068C  __size_of_dispLCD_instReg 0079       start_initialization 07EE  
     __size_of_dispLCDstr 003B           ?_dispLCD_lincol 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       dispLCD_lincol@col 0073         dispLCD_lincol@lin 0075                init_fetch0 068C  
             __pdataBANK0 0020                 ___latbits 0002         __size_of__fptable 000C  
       ??_dispLCD_dataReg 0070         ??_dispLCD_instReg 0070                 __pfunctab 0003  
             _dispLCD_clr 0000               _dispLCD_num 0000                 __pstrings 000F  
          __size_of_delay 0017              ??_dispLCDstr 0077          dispLCD_dataReg@d 0071  
           dispLCDstr@str 0076               __stringbase 0014        __end_of_dispLCDstr 0734  
        dispLCD_instReg@i 0072           fp__dispLCD_init 0009        __end_of__stringtab 0015  
                __fptable 0003          ??_dispLCD_lincol 0074         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0018             ?_dispLCD_init 0070           _dispLCD_dataReg 06CE  
                init_ram0 0690           _dispLCD_instReg 0775                 stringcode 000F  
           fp__dispLCDstr 000C            ??_dispLCD_init 0073                  stringdir 000F  
                stringtab 000F  
